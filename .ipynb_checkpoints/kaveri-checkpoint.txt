import pandas as pd  
import matplotlib.pyplot as plt
import seaborn as sns  
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset
df = pd.read_csv("D:\\Result2009.csv")

# Check for missing values
print(df.isnull().sum())

# Features and target
X = df['IA-1'].values.reshape(-1, 1)  # 'IA-1' is the feature
y = df['EX-1']  # 'EX-1' is the target

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)



# Create and train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print("Mean Squared Error:", mse)
print("R-squared:", r2)

# Plot the results
plt.figure(figsize=(7, 5))
plt.scatter(X_test, y_test, color='orange', label='Actual Data')
plt.plot(X_test, y_pred, color='green', linewidth=2, label='Regression Line')
plt.title('Linear Regression: Relationship between IA-1 and EX-1')
plt.xlabel('IA-1')
plt.ylabel('EX-1')
plt.legend()
plt.show()

# Predict for a specific value of IA-1
IA_Marks = [[24]]  # Replace with the desired IA-1 value
predicted_marks = model.predict(IA_Marks)
print(f"Predicted EX-1 Marks for {IA_Marks[0][0]} in IA-1: {predicted_marks[0]}")